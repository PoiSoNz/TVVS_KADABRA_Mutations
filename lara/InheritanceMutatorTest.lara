import kadabra.mutation.inheritance.InheritanceIPCMutator;
import kadabra.mutation.utils.Utils;
import weaver.WeaverJps;

aspectdef InheritanceMutatorTest

// Select overriden functions in each file
/*for($method of WeaverJps.search('method').get()) {

	for(var i = 0; i < $method.children.length; i++) {
		if($method.children[i].instanceOf('expression') && $method.children[i].type === 'Override') {
			println("chamar mutator no metodo " + $method.toReference);

			var mutator = new InheritanceIODMutator($method);
			mutator.mutate();

			println($method.srcCode);

			mutator.restore();
			break;
		} else if($method.children[i].instanceOf('expression')) {

		}
	}
}*/

// Select super constructor call in each file
for($method of WeaverJps.search('constructor').get()) {
	//println("vai procurar constructors");
	for($descendant of $method.descendants) {
		if($descendant.instanceOf('comment')) {
			//println($descendant.ast);
			break;
		}
		//TODO: Verificar se ÃƒÆ’Ã‚Â© super
		if($descendant.instanceOf('call')) {
			var mutator = new InheritanceIPCMutator($descendant);
			mutator.mutate();

			//println($descendant.parent.srcCode);

			mutator.restore();
			
			println($descendant.parent.srcCode);
			break;
		}
	}
}

end